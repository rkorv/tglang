c dinka.kmn
c 
c Dinka 3.0
c 
c Keyboard layout designed for Dinka.
c Created for IDLI(The International Dinka Language Institute).
c 
c 2.1 : Added CAPS LOCK toggle between US QWERTY layout
c and Dinka layout
c 2.2 : Streamline input of long breatjy vowels; 'vvd' instead of 'vdvd',
c where 'v' = vowel and 'd' = diaeresis
c 2.3 : Modified the logic of the 'backspace' key sequences.
c 2.4 : Reassign the diaeresis key
c 2.5 : Bug fix
c 2.5 basic : cutdown version without the Caps Lock toggle to qwerty keyboard layout.
c 2.5 academic : Add requirements for academic use of Dinka,
c i.e. add phonetic characters and diacritics used by various linguists.
c 2.6 : Single keyboard layout incorportaing standard orthography
c and academic requirements. Optimised for KMD 7.0
c 3.0 : corrected handling of long vowels; rationalise keystrokes.
c 4.0 : Add optional tone marking and normalisation (using KMD 8.0 features)
c 
c Andrew Cunningham    2013-03-04
c support AT openroad.net.au
c lang.support AT gmail.com

store(&VERSION) '8.0'
store(&NAME) 'Thuɔŋjäŋ'
store(&COPYRIGHT) '© State Library of Victoria 2013'
store(&MESSAGE) 'Dinka Unicode keyboard layout for the International Dinka Language Institute.'      
store(&BITMAP) 'din.ico'
store(&MnemonicLayout) "0"
store(&EthnologueCode) "dip diw dib dks dik"

begin Unicode > use(constraints)

c Extended Latin characters required for Dinka
c ɛ ɣ ŋ ɔ Ɛ Ɣ Ŋ Ɔ
store(extK) 'sfqxSFQX'
store(extCh) U+025b U+0263 U+014b U+0254 U+0190 U+0194 U+014a U+0186  

c Breathy vowels
c ä ë ï ö Ä Ë Ï Ö ɛ̈ ɔ̈ Ɛ̈ Ɔ̈
store(diaresisK) ";"
store(diaresisCh) U+0308 
store(breathyK) 'aeioAEIO'
store(breathyCh) U+00e4 U+00eb U+00ef U+00f6 U+00c4 U+00cb U+00cf U+00d6
store(allBreathyK) outs(breathyK) U+025b U+0254 U+0190 U+0186

c Tone marking scheme 1 (three tones)
c high tone - acute U+0301
c mid tone - macron U+0304
c low tone - grave U+0300
store(diaK) "`" "'" "-"
store(diaCh) U+0300 U+0301 U+0304 
store(vowel) 'aeiouAEIOU'  
store(acute) U+00e1 U+00e9 U+00ed U+00f3 U+00fa U+00c1 U+00c9 U+00cd U+00d3 U+00da
store(grave) U+00e0 U+00e8 U+00ec U+00f2 U+00f9 U+00c0 U+00c8 U+00cc U+00d2 U+00d9  
store(macron) U+0101 U+0113 U+012b U+014d U+016b U+0100 U+0112 U+012a U+014c U+016a    
store(tones)  outs(acute) outs(grave) outs(macron) outs(diaCh)

c Additional vowel stores
store(allVowels) outs(vowel) outs(breathyCh) U+025b U+0254 U+0190 U+0186 U+0308
store(allVowelsSubset) outs(vowel) outs(breathyCh) 


c Options
store(normForm) 'nfc'

group(constraints) using keys 

notany(allVowels) + any(diaK) > context beep
notany(allBreathyK) + any(diaresisK) > context beep
any(breathyCh) + any(diaresisK) > context beep 
U+0308 + any(diaresisK) > context beep
any(tones) + any(diaK) >  context beep 

nomatch > use(main)


group(main) using keys 
c 
c generate extended latin characters
c 
+ any(extK) > index(extCh,1)  

c 
c generate tones
c 
c if(normForm = 'nfc') any(allVowels) context(1) + any(diaK) > context(1) index(diaCh, 3) context(1) index(diaCh, 3) use(diacritics)  c long vowels
c if(normForm = 'nfc') any(allVowels) + any(diaK) > context index(diaCh, 2) use(diacritics)

any(allVowels) context(1) + any(diaK) > context(1) index(diaCh, 3) context(1) index(diaCh, 3) use(diacritics)  c long vowels 
any(allVowels) + any(diaK) > context index(diaCh, 2) use(diacritics)  


c 
c generate breathy vowels
c 
any(allVowels) context(1) + $diaresisK > context(1) $diaresisCh context(1) $diaresisCh use(diaresis) c long vowels    
any(allVowels) + $diaresisK > context $diaresisCh use(diaresis) 
   
c 
c 
c 


group(diacritics)

if(normForm = 'nfc') any(allVowels) any(diaK) > context index(diaCh, 3) use(diacriticsNFC) 

group(diacriticsNFC) 
c 
c Rules for reordering inpiut for tone marking (scheme 1) using Unicode Normalisation Form C
c 

c rules handling input for NFC grave (low tone)
any(vowel) U+0300 context(1) U+0300 > index(grave,1) index(grave,1)
any(vowel) context(1) U+0300 > index(grave,1) index(grave,1)                                   
any(vowel) U+0300 > index(grave,1)   
                                                                                                         
U+025b U+0308 U+025b U+0308 U+0300 > U+025b U+0308 U+0300 U+025b U+0308 U+0300    c    ɛ ̈ ɛ ̈ ̀ > ɛ ̈ ̀ ɛ ̈ ̀
U+0190 U+0308 U+0190 U+0308 U+0300 > U+0190 U+0308 U+0300 U+0190 U+0308 U+0300    c    Ɛ ̈ Ɛ ̈ ̀ > Ɛ ̈ ̀ Ɛ ̈ ̀   
U+0254 U+0308 U+0254 U+0308 U+0300 > U+0254 U+0308 U+0300 U+0254 U+0308 U+0300    c    ɔ ̈ ɔ ̈ ̀ > ɔ ̈ ̀ ɔ ̈ ̀
U+0186 U+0308 U+0186 U+0308 U+0300 > U+0186 U+0308 U+0300 U+0186 U+0308 U+0300    c    Ɔ ̈ Ɔ ̈ ̀ > Ɔ ̈ ̀ Ɔ ̈ ̀

c rules handling input for NFC acute (high tone)
any(vowel) U+0301 context(1) U+0301 > index(acute,1) index(acute,1)
any(vowel) context(1) U+0301 > index(acute,1) index(acute,1)
any(vowel) U+0301 > index(acute,1)

U+00ef U+0301 U+00ef U+0301 > U+1e2f U+1e2f        c    ï ́ ï ́ > ḯ ḯ
U+00ef U+00ef U+0301 > U+1e2f U+1e2f               c    ï ï ́ > ḯ ḯ
U+00ef U+0301 > U+1e2f                             c    ï ́ > ḯ
U+00cf U+0301 U+00cf U+0301 > U+1e2e U+1e2e        c    Ï ́ Ï ́ > Ḯ Ḯ
U+00cf U+00cf U+0301 > U+1e2e U+1e2e               c    Ï Ï ́ > Ḯ Ḯ
U+00cf U+0301 > U+1e2e                             c    Ï ́ > Ḯ             

U+025b U+0308 U+025b U+0308 U+0301 > U+025b U+0308 U+0301 U+025b U+0308 U+0301   c    ɛ ̈ ɛ ̈ ́ > ɛ ̈ ́ ɛ ̈ ́ 
U+0190 U+0308 U+0190 U+0308 U+0301 > U+0190 U+0308 U+0301 U+0190 U+0308 U+0301   c    Ɛ ̈ Ɛ ̈ ́ > Ɛ ̈ ́ Ɛ ̈ ́ 
U+0254 U+0308 U+0254 U+0308 U+0301 > U+0254 U+0308 U+0301 U+0254 U+0308 U+0301   c    ɔ ̈ ɔ ̈ ́ > ɔ ̈ ́ ɔ ̈ ́ 
U+0186 U+0308 U+0186 U+0308 U+0301 > U+0186 U+0308 U+0301 U+0186 U+0308 U+0301   c    Ɔ ̈ Ɔ ̈ ́ > Ɔ ̈ ́ Ɔ ̈ ́ 

c rules handling input for NFC macron (mid tone)
any(allVowelsSubset) context(1) U+0304 > context(1) U+0304 context(1) U+0304
any(vowel) U+0304 context(1) U+0304 > index(macron,1) index(macron,1) 
any(vowel) context(1) U+0304 > index(macron,1) index(macron,1)  
any(vowel) U+0304 > index(macron,1)      

                
U+00e4 U+0304 U+00e4 U+0304 > U+01df U+01df    c    ä ̄ ä ̄ > ǟ ǟ
U+00e4 U+00e4 U+0304 > U+01df U+01df           c    ä ä ̄ > ǟ ǟ
U+00e4 U+0304 > U+01df                         c    ä ̄ > ǟ  

U+00f6 U+0304 U+00f6 U+0304 > U+022b U+022b    c    ö ̄ ö ̄ > ȫ ȫ
U+00f6 U+00f6 U+0304 > U+022b U+022b           c    ö ö ̄ > ȫ ȫ
U+00f6 U+0304 > U+022b                         c    ö ̄ > ȫ         

U+00c4 U+0304 U+00c4 U+0304 > U+01de U+01de    c    Ä ̄ Ä ̄ > Ǟ Ǟ
U+00c4 U+00c4 U+0304 > U+01de U+01de           c    Ä Ä ̄ > Ǟ Ǟ
U+00c4 U+0304 > U+01de                         c    Ä ̄ > Ǟ      

U+00d6 U+0304 U+00d6 U+0304 > U+022a U+022a    c    Ö ̄ Ö ̄ > Ȫ Ȫ  
U+00d6 U+00d6 U+0304 > U+022a U+022a           c    Ö Ö ̄ > Ȫ Ȫ  
U+00d6 U+0304 > U+022a                         c    Ö ̄ > Ȫ 

U+025b U+0308 U+025b U+0308 U+0304 > U+025b U+0308 U+0304 U+025b U+0308 U+0304      c    ɛ ̈ ɛ ̈ ̄ > ɛ ̈ ̄ ɛ ̈ ̄
U+025b U+025b U+0304 > U+025b U+0304 U+025b U+0304                                  c    ɛ ɛ ̄ > ɛ ̄ ɛ ̄
U+0190 U+0308 U+0190 U+0308 U+0304 > U+0190 U+0308 U+0304 U+0190 U+0308 U+0304      c    Ɛ ̈ Ɛ ̈ ̄ > Ɛ ̈ ̄ Ɛ ̈ ̄
U+0190 U+0190 U+0304 > U+0190 U+0304 U+0190 U+0304                                  c    Ɛ Ɛ ̄ > Ɛ ̄ Ɛ ̄
U+0254 U+0308 U+0254 U+0308 U+0304 > U+0254 U+0308 U+0304 U+0254 U+0308 U+0304      c    ɔ ̈ ɔ ̈ ̄ > ɔ ̈ ̄ ɔ ̈ ̄ 
U+0254 U+0254 U+0304 > U+0254 U+0304 U+0254 U+0304                                  c    ɔ ɔ ̄ > ɔ ̄ ɔ ̄
U+0186 U+0308 U+0186 U+0308 U+0304 > U+0186 U+0308 U+0304 U+0186 U+0308 U+0304      c    Ɔ ̈ Ɔ ̈ ̄ > Ɔ ̈ ̄ Ɔ ̈ ̄
U+0186 U+0186 U+0304 > U+0186 U+0304 U+0186 U+0304                                  c    Ɔ Ɔ ̄ > Ɔ ̄ Ɔ ̄
                
group(diaresis)   
c 
c Rules for NFC breathy vowels
c 
any(breathyK) U+0308 context(1) U+0308 > index(breathyCh,1) index(breathyCh,1)
any(breathyK) context(1) U+0308 > index(breathyCh,1) index(breathyCh,1)
any(breathyK) U+0308 > index(breathyCh,1)                                  



