Функция СоздатьПараметрыЗаписи(Конфигурация, ТипКорневогоЭлемента) Экспорт

	ГенерацияРасширения = ТипКорневогоЭлемента = ТипыОбъектовКонфигурации.ИмяТипаРасширения();

	ПараметрыЗаписи = Новый Структура();
	ПараметрыЗаписи.Вставить("ОписаниеКонфигурации", Конфигурация.ОписаниеКонфигурации());
	ПараметрыЗаписи.Вставить("СтруктураКаталогов", Конфигурация.СтруктураКаталогов());
	ПараметрыЗаписи.Вставить("ТипКорневогоЭлемента", ТипКорневогоЭлемента);
	ПараметрыЗаписи.Вставить("ФорматВыгрузки", ПараметрыЗаписи.СтруктураКаталогов.ФорматВыгрузки());
	ПараметрыЗаписи.Вставить("Изменения", Новый Структура("ИзмененКорневойОбъект", Истина));

	Если ПараметрыЗаписи.ФорматВыгрузки = ФорматыВыгрузки.EDT Тогда

		ГенераторОписаний = ГенераторОписанийEDT;

	Иначе

		ГенераторОписаний = ГенераторОписанийКонфигуратор;

	КонецЕсли;

	ПараметрыГенерации = ГенераторОписаний.СоздатьПараметрыГенерации("8.3.10", ГенерацияРасширения);

	ПараметрыЗаписи.Вставить("ГенераторОписаний", ГенераторОписаний);
	ПараметрыЗаписи.Вставить("ПараметрыГенерации", ПараметрыГенерации);

	Возврат Новый ФиксированнаяСтруктура(ПараметрыЗаписи);

КонецФункции

// Сохраняет описание объекта конфигурации на диск
//
// Параметры:
//  ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Процедура СохранитьОписание(ОбъектКонфигурации) Экспорт

	ПараметрыЗаписи = ОбъектКонфигурации.Конфигурация.ПараметрыЗаписи();
	ДанныеОбъекта = ОбъектКонфигурации.Описание;

	ИмяФайла = ПараметрыЗаписи.СтруктураКаталогов.ИмяФайлаОписанияОбъекта(ОбъектКонфигурации.Наименование, ОбъектКонфигурации.Тип);

	Запись = ПараметрыЗаписи.ГенераторОписаний.СоздатьЗапись(ОбъектКонфигурации.Тип, ПараметрыЗаписи.ПараметрыГенерации, ИмяФайла);

	ПараметрыЗаписи.ГенераторОписаний.ЗаписатьПорождаемыеТипы(Запись, ДанныеОбъекта.Наименование, ОбъектКонфигурации.Тип);
	ПараметрыЗаписи.ГенераторОписаний.ЗаписатьСвойства(Запись, ОбъектКонфигурации.Тип, ДанныеОбъекта);

	ОписаниеСвойств = СтруктурыОписаний.ОписаниеСвойствОбъекта(ОбъектКонфигурации.Тип);

	Если ОписаниеСвойств.ЕстьПодчиненные Тогда

		ПараметрыЗаписи.ГенераторОписаний.Подчиненные(Запись, ?(ДанныеОбъекта.Свойство("Подчиненные"), ДанныеОбъекта.Подчиненные, Неопределено));

	КонецЕсли;

	ОбработкаXML.ЗакрытьЗапись(Запись);

КонецПроцедуры

// Записывает данные на диск
//
// Параметры:
//   ПараметрыЗаписи - Структура - Параметры записи, уникальные для каждой конфигурации. См. СоздатьПараметрыЗаписи
//
Процедура Зафиксировать(ПараметрыЗаписи) Экспорт

	ПараметрыЗаписи.ОписаниеКонфигурации.ОбъектыКонфигурации.Сортировать("Тип, Наименование");

	Если ПараметрыЗаписи.Изменения.ИзмененКорневойОбъект Тогда

		ИмяФайлаОписания = ПараметрыЗаписи.СтруктураКаталогов.ИмяФайлаОписанияКонфигурации();

		ЗаписьConfiguration = ПараметрыЗаписи.ГенераторОписаний.СоздатьОписаниеКорневогоОбъекта(
			ПараметрыЗаписи.ОписаниеКонфигурации.СвойстваКонфигурации,
			ПараметрыЗаписи.ТипКорневогоЭлемента,
			ИмяФайлаОписания,
			ПараметрыЗаписи.ПараметрыГенерации);

		Для Каждого Стр Из ПараметрыЗаписи.ОписаниеКонфигурации.ОбъектыКонфигурации Цикл

			Если Стр.Тип <> ПараметрыЗаписи.ТипКорневогоЭлемента И Стр.Родитель = Неопределено Тогда

				ПараметрыЗаписи.ГенераторОписаний.ЗарегистрироватьОбъектВКонфигурации(Стр, ЗаписьConfiguration);

			КонецЕсли;

		КонецЦикла;

		ОбработкаXML.ЗакрытьЗапись(ЗаписьConfiguration);

	КонецЕсли;

	ПараметрыЗаписи.Изменения.ИзмененКорневойОбъект = Ложь;

КонецПроцедуры

// Служебный метод, его необходимо вызывать при добавлении объекта в конфигурацию
//
// Параметры:
//  ОбъектКонфигурации - СтрокаТаблицыЗначений - Описание объекта конфигурации. См. СтруктурыОписаний.ТаблицаОписанияОбъектовКонфигурации
//
Процедура ПриДобавленииОбъекта(ОбъектКонфигурации) Экспорт

	ЗаписьКонфигурации.СохранитьОписание(ОбъектКонфигурации);
	ОбъектКонфигурации.Конфигурация.ПараметрыЗаписи().Изменения.ИзмененКорневойОбъект = Истина;

КонецПроцедуры

Процедура УстановитьПризнакИзменений(ПараметрыЗаписи, НовыйПризнакИзменений) Экспорт

	ПараметрыЗаписи.Изменения.ИзмененКорневойОбъект = НовыйПризнакИзменений;

КонецПроцедуры