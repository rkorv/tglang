
// { -rot pair swap ! } : 2!

{ char " word 1 ' $+ } ::_ +"

$3 parse-int =: subwallet-id

true =: allow-bounce

{ hole constant } : variable

"Asm.fif" include

$6 "wallet-query" replace-if-null =: savefile

// { cdr car } : cadr

#!/usr/bin/create-state -s

IF:<{	//  x n
    SWAP	//  n x
    16 RSHIFT#	//  n x
    SWAP	//  x n
    16 ADDCONST	//  x n
}>	//  x n

swap 0<> abort"exit code"


// { 3 untuple } : untriple

false =: force-bounce

64 PUSHINT	//  x n _10=64
exp INLINECALLDICT	//  x n _11
s2 s(-1) PUXC	//  x n x _11
GEQ	//  x n _12
IF:<{	//  x n
    SWAP	//  n x
    64 RSHIFT#	//  n x
    SWAP	//  x n
    64 ADDCONST	//  x n
}>	//  x n

"TonUtil.fif" include

drop  // Drop flags


$1 =: file-path

// msg slice

// { 2 tuple-len? } : pair?


"" =: comment  // comment for simple transfers

<s
2 u@+ swap 0<> abort"-1"
4 u@+ swap 0 <> abort"0"
8 u@+ swap 3 <> abort"0b111"
16 u@+ swap 5 <> abort"0b01110101"
32 u@+ swap 15 <> abort"0b111111111111110001"
64 u@+ swap 27 <> abort"0b10111110000111111111111110001110101011"
128 u@+ swap 36 <> abort"0xfffaaffa3445512"
256 u@+ swap 16 <> abort"0b0111111111111011011"
s>


PROGRAM{
  DECLPROC power
  DECLPROC sqrt
  DECLPROC avg
  DECLPROC exp
  DECLPROC log2
  DECLPROC recv_internal
  128253 DECLMETHOD get_total
}END>c


begin-options
     " <file-path> <dest-addr> <subwallet-id> <seqno> <amount> [-x <extra-amount>*<extra-currency-id>] [-n|-b] [-t<timeout>] [-B <body-boc>] [-C <comment>] [<savefile>]" +cr +tab
    +"Creates a request to advanced wallet created by new-wallet-v3.fif, with private key loaded from file <file-path> "
    +"and int validator-id (workchain -1), and saves it into <savefile>.boc ('wallet-query.boc' by default)"
    disable-digit-options generic-help-setopt
  "n" "--no-bounce" { false =: allow-bounce } short-long-option
    "Clears bounce flag" option-help
  "b" "--force-bounce" { true =: force-bounce } short-long-option
    "Forces bounce flag" option-help
  "x" "--extra" { $>xcc extra-cc+! } short-long-option-arg
    "Indicates the amount of extra currencies to be transfered" option-help
  "t" "--timeout" { parse-int =: timeout } short-long-option-arg
    "Sets expiration timeout in seconds (" timeout (.) $+ +" by default)" option-help
  "B" "--body" { =: body-boc-file } short-long-option-arg
    "Sets the payload of the transfer message" option-help
  "C" "--comment" { =: comment } short-long-option-arg
    "Sets the comment to be sent in the transfer message" option-help
  "m" "--mode" { parse-int =: send-mode } short-long-option-arg
    "Sets transfer mode (0..255) for SENDRAWMSG (" send-mode (.) $+ +" by default)"
    option-help
  "h" "--help" { usage } short-long-option
    "Shows a help message" option-help
parse-options


// ' unpair : uncons

swap 0<> abort"exit code"


false =: force-bounce

// { over tuple? { swap count = } { 2drop false } cond } : tuple-len?

{ base @ b# } : base#

// { bl word dup (def?) { drop skip-to-eof } { 'nop swap 0 (create) } cond } : library


begin-options
     " <file-path> <dest-addr> <subwallet-id> <seqno> <amount> [-x <extra-amount>*<extra-currency-id>] [-n|-b] [-t<timeout>] [-B <body-boc>] [-C <comment>] [<savefile>]" +cr +tab
    +"Creates a request to advanced wallet created by new-wallet-v3.fif, with private key loaded from file <file-path> "
    +"and int validator-id (workchain -1), and saves it into <savefile>.boc ('wallet-query.boc' by default)"
    disable-digit-options generic-help-setopt
  "n" "--no-bounce" { false =: allow-bounce } short-long-option
    "Clears bounce flag" option-help
  "b" "--force-bounce" { true =: force-bounce } short-long-option
    "Forces bounce flag" option-help
  "x" "--extra" { $>xcc extra-cc+! } short-long-option-arg
    "Indicates the amount of extra currencies to be transfered" option-help
  "t" "--timeout" { parse-int =: timeout } short-long-option-arg
    "Sets expiration timeout in seconds (" timeout (.) $+ +" by default)" option-help
  "B" "--body" { =: body-boc-file } short-long-option-arg
    "Sets the payload of the transfer message" option-help
  "C" "--comment" { =: comment } short-long-option-arg
    "Sets the comment to be sent in the transfer message" option-help
  "m" "--mode" { parse-int =: send-mode } short-long-option-arg
    "Sets transfer mode (0..255) for SENDRAWMSG (" send-mode (.) $+ +" by default)"
    option-help
  "h" "--help" { usage } short-long-option
    "Shows a help message" option-help
parse-options



^reset ."üòè NFT individual content: "  nft-data ^green  (dump) type cr

1 PUSHINT	//  x n _52=1
exp INLINECALLDICT	//  x n _53
s1 s2 XCHG	//  n x _53
GEQ	//  n _54
IF:<{	//  n
    INC	//  n
}>	//  n
}>

// { true (atom) drop } : atom

// { (.) type } : ._

{ bl word 1 { -rot 2 'nop does swap 0 (create) }
} :: 2=:

10 constant ten

{ 8 base ! } : octal

<b
  op_transfer 32 u, // op transfer
  query_id 64 u, // query_id
  send_amount Gram, // Sending one jetton
  send_addr Addr,
  0 2 u, // addr_none for resp_dst
  0 1 u, // No custom payload
  forward_amount Gram, // forward ton amount 0.03
  0 1 u, // no ref forward_payload
b>

"Asm.fif" include

"Asm.fif" include

swap 0<> abort"exit code"


subwallet-id (.) 1 ' $+ does : +subwallet


collection-code <s // load func code as slice

exp PROCREF:<{
//  x
DUP	//  x x
-1 GTINT	//  x _2
IF:<{	//  x
    POW2	//  _3
}>ELSE<{	//  x
    1 PUSHINT	//  x _6=1
    SWAP	//  _6=1 x
    NEGATE	//  _6=1 _8
    RSHIFT	//  _3
}>
}>


swap // get seqno as int on top of stack
(dump) // dump to string
type // print it to output
cr // print endline


<s 64 u@ // get message from second cell
swap // get seqno from cell to top
// you will see that integer and cell slice are in stack
// print seqno (it is just int in stack)

5 square .

{ bl word 1 { -rot 2 'nop does swap 0 (create) }
} :: 2=:

10 constant ten

IF:<{	//  x n
    SWAP	//  n x
    32 RSHIFT#	//  n x
    SWAP	//  x n
    32 ADDCONST	//  x n
}>	//  x n
16 PUSHINT	//  x n _24=16
exp INLINECALLDICT	//  x n _25
s2 s(-1) PUXC	//  x n x _25
GEQ	//  x n _26

#!/usr/bin/fift -s

5 square .

cr ."ok!" cr

// { 3 untuple } : untriple

^reset ."üêæ NFT data: "  <b collection-nft-data  B, nft-data B, b> <s dup sbits 8 / B@ B>$ ^cyan (dump) type cr


// { cdr cdr } : cddr

1000000000 constant send_amount

// { def? ' skip-to-eof if } : skip-ifdef

collection-data // add c4 cell lodaded from lite-client

4 PUSHINT	//  x n _38=4
exp INLINECALLDICT	//  x n _39
s2 s(-1) PUXC	//  x n x _39
GEQ	//  x n _40
IF:<{	//  x n
    SWAP	//  n x
    4 RSHIFT#	//  n x
    SWAP	//  x n
    4 ADDCONST	//  x n
}>	//  x n


swap // get seqno as int on top of stack
(dump) // dump to string
type // print it to output
cr // print endline


1000000000 constant send_amount

"" constant <#

// a b c d -- (a*d-b*c) b*d
{ -rot over * 2swap tuck * rot - -rot * } : R-

sqrt PROCREF:<{
    //  x
    DUP	//  x x
    0 EQINT	//  x _2
    IFJMP:<{	//  x
      DROP	//
      0 PUSHINT	//  _3=0
    }>	//  x
    DUP	//  x x
    4 LESSINT	//  x _5
    IFJMP:<{	//  x
      DROP	//
      1 PUSHINT	//  _6=1
    }>	//  x
    DUP	//  x x
    INC	//  x _9
    1 RSHIFT#	//  x z
    OVER	//  x z y
    WHILE:<{
      2DUP	//  x z y z y
      LESS	//  x z y _13
    }>DO<{	//  x z y
      DROP	//  x z
      s0 s1 s0 PUSH3	//  x z y x z
      DIV	//  x z y _14
      ROT	//  x y _14 z
      ADD	//  x y _15
      1 RSHIFT#	//  x y z
      SWAP	//  x z y
    }>	//  x z y
    2 1 BLKDROP2	//  y
  }>


4 PUSHINT	//  x n _38=4
exp INLINECALLDICT	//  x n _39
s2 s(-1) PUXC	//  x n x _39
GEQ	//  x n _40
IF:<{	//  x n
    SWAP	//  n x
    4 RSHIFT#	//  n x
    SWAP	//  x n
    4 ADDCONST	//  x n
}>	//  x n

// { 2 untuple } : unpair

{ bl word 0 2 ' (create) } :: :

PROGRAM{ "fif/0.fif" include }END>c <s

32 PUSHINT	//  x n _17=32
exp INLINECALLDICT	//  x n _18
s2 s(-1) PUXC	//  x n x _18
GEQ	//  x n _19

{ swap ({) over 2+ -roll swap (compile) (}) } : does

variable extra-currencies

dest_addr 2dup bounce 7 + .Addr ." = " .addr

{ 8 base ! } : octal


begin-options
     " <filename-base> <dest-addr> <subwallet-id> <seqno> <amount> [-x <extra-amount>*<extra-currency-id>] [-n|-b] [-t<timeout>] [-B <body-boc>] [-C <comment>] [<savefile>]" +cr +tab
    +"Creates a request to advanced wallet created by new-wallet-v3.fif, with private key loaded from file <filename-base>.pk "
    +"and address from <filename-base>.addr, and saves it into <savefile>.boc ('wallet-query.boc' by default)"
    disable-digit-options generic-help-setopt
  "b" "--force-bounce" { true =: force-bounce } short-long-option
    "Forces bounce flag" option-help
  "t" "--timeout" { parse-int =: timeout } short-long-option-arg
    "Sets expiration timeout in seconds (" timeout (.) $+ +" by default)" option-help
  "C" "--comment" { =: comment } short-long-option-arg
    "Sets the comment to be sent in the transfer message" option-help
  "m" "--mode" { parse-int =: send-mode } short-long-option-arg
    "Sets transfer mode (0..255) for SENDRAWMSG (" send-mode (.) $+ +" by default)"
    option-help
  "h" "--help" { usage } short-long-option
    "Shows a help message" option-help
parse-options

false =: force-bounce

// TODO:

c7 // add c7 cell

{ find 0<> dup ' nip if } : (def?)

{ hole dup 1 { @ execute } does create } : recursive

20000000 constant forward_amount

{ 0< { char - hold } if } : sign

// TODO:

4 roll // In stack: index,  collection address, owner_address, body, init?

{ bl word 1 { swap 1 'nop does swap 0 (create) }
} :: =:

// { def? ' skip-to-eof if } : skip-ifdef

"" constant <#

{ base @ B# } : Base#

#!/usr/bin/fift -s

^reset ."üòè NFT collection base content: " collection-nft-data B>$ ^cyan  (dump) type cr

2constant send_addr // worchain and addr into single constant

8 PUSHINT	//  x n _31=8
exp INLINECALLDICT	//  x n _32
s2 s(-1) PUXC	//  x n x _32
GEQ	//  x n _33
IF:<{	//  x n
    SWAP	//  n x
    8 RSHIFT#	//  n x
    SWAP	//  x n
    8 ADDCONST	//  x n
}>	//  x n

{ bl word 0 2 ' (create) } :: :

{ 2dup > ' swap if } : minmax

{ { bl word dup "" $= abort"comment extends after end of file" "*/" $= } until 0 'nop } :: /*


Gram 1000 / constant mGram
mGram .


3 roll // In stack: collection address, owner_address, body, index

// parse new c4 cell


0x076ef1ea           // magic
0                    // actions
0                    // msgs_sent
0           // unixtime
1                    // block_lt
0       // trans_lt
239                  // randseed
1000000000 null pair // balance_remaining

{ 0x._ space } : 0x.
