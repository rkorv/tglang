photoSize type:string photo:file width:int32 height:int32 progressive_sizes:vector<int32> = PhotoSize;
pageBlockKicker kicker:RichText = PageBlock;
getMessageThread#7af23e3e chat_id:int53 message_id:int53 = MessageThreadInfo;
messages.getFavedStickers#21ce0b0e hash:int = messages.FavedStickers;
//@minithumbnail Document minithumbnail; may be null @thumbnail Document thumbnail in JPEG or PNG format (PNG will be used only for background patterns); as defined by the sender; may be null @document File containing the document
//@scope Types of chats for which to return the notification settings information
contactBlocked#561bc879 user_id:int date:int = ContactBlocked;
inputStickerSetThumb#dbaeae9 stickerset:InputStickerSet volume_id:long local_id:int = InputFileLocation;
pageBlockEmbeddedPost#bc57cdf5 url:string author:string author_photo:photo date:int32 page_blocks:vector<PageBlock> caption:pageBlockCaption = PageBlock;
pageBlockCollage#8b31c4f items:Vector<PageBlock> caption:RichText = PageBlock;
//@description Sets the result of a shipping query; for bots only @shipping_query_id Identifier of the shipping query @shipping_options Available shipping options @error_message An error message, empty on success
---functions---
//@chat_photo_id Identifier of the profile photo to reuse
topPeer#edcdc05b peer:Peer rating:double = TopPeer;
getMessageLocally#dc062b6c chat_id:int53 message_id:int53 = Message;
getJsonValue json:string = JsonValue;
sendBotStartMessage bot_user_id:int32 chat_id:int53 parameter:string = Message;
searchPublicChats query:string = Chats;
//@chat_id Identifier of the chat to which to forward messages
account.resetAuthorization#df77f3bc hash:long = Bool;
updateDcOptions#8e5e9873 dc_options:Vector<DcOption> = Update;
messages.getInlineGameHighScores#f635e1b id:InputBotInlineMessageID user_id:InputUser = messages.HighScores;
inputStickerStatic sticker:InputFile emojis:string mask_position:maskPosition = InputSticker;
messages.favedStickersNotModified#9e8fa6d3 = messages.FavedStickers;
messageActionChatMigrateTo#51bdb021 channel_id:int = MessageAction;
inputGameID#32c3e77 id:long access_hash:long = InputGame;
//@description Returns information about a message @chat_id Identifier of the chat the message belongs to @message_id Identifier of the message to get
getLoginUrlInfo#c595bb2a chat_id:int53 message_id:int53 button_id:int32 = LoginUrlInfo;
addChatMembers chat_id:int53 user_ids:vector<int32> = Ok;
contacts.topPeersDisabled#b52c939d = contacts.TopPeers;
chatEventPermissionsChanged old_permissions:chatPermissions new_permissions:chatPermissions = ChatEventAction;
messages.discardEncryption#edd923c5 chat_id:int = Bool;
messages.getPeerSettings#3672e09c peer:InputPeer = PeerSettings;
//@added_sticker_file_ids File identifiers of the stickers added to the video, if applicable
thumbnailFormatMpeg4#109b57fe = ThumbnailFormat;
//@username Username to be resolved
//@switch_pm_text If non-empty, this text must be shown on the button, which opens a private chat with the bot and sends the bot a start message with the switch_pm_parameter @switch_pm_parameter Parameter for the bot start message
//@description The call has ended with an error @error Error. An error with the code 4005000 will be returned if an outgoing call is missed because of an expired timeout
//@start_date Point in time (Unix timestamp) when the group call is supposed to be started by an administrator; 0 to start the video chat immediately. The date must be at least 10 seconds and at most 8 days in the future
message id:int53 sender:MessageSender chat_id:int53 sending_state:MessageSendingState scheduling_state:MessageSchedulingState is_outgoing:Bool is_pinned:Bool can_be_edited:Bool can_be_forwarded:Bool can_be_deleted_only_for_self:Bool can_be_deleted_for_all_users:Bool can_get_statistics:Bool can_get_message_thread:Bool is_channel_post:Bool contains_unread_mention:Bool date:int32 edit_date:int32 forward_info:messageForwardInfo interaction_info:messageInteractionInfo reply_in_chat_id:int53 reply_to_message_id:int53 message_thread_id:int53 ttl:int32 ttl_expires_in:double via_bot_user_id:int32 author_signature:string media_album_id:int64 restriction_reason:string content:MessageContent reply_markup:ReplyMarkup = Message;
accessPointRule#4679b65f phone_prefix_rules:string dc_id:int ips:vector<IpPort> = AccessPointRule;
//@audio_url The URL of the audio file @audio_duration Audio file duration, in seconds
StrHash Object;
//@description Changes the pinned state of a chat. There can be up to GetOption("pinned_chat_count_max")/GetOption("pinned_archived_chat_count_max") pinned non-secret chats and the same number of secret chats in the main/arhive chat list
sendPassportAuthorizationForm autorization_form_id:int32 types:vector<PassportElementType> = Ok;
createBasicGroupChat basic_group_id:int32 force:Bool = Chat;
intHash {alpha:Type} vector<coupleInt<alpha>> = IntHash<alpha>;
keyboardButtonTypeRequestPhoneNumber#a4d9b7b9 = KeyboardButtonType;
dialog#2c171f72 flags:# pinned:flags.2?true unread_mark:flags.3?true peer:Peer top_message:int read_inbox_max_id:int read_outbox_max_id:int unread_count:int unread_mentions_count:int notify_settings:PeerNotifySettings pts:flags.0?int draft:flags.1?DraftMessage folder_id:flags.4?int = Dialog;
inputPhotoFileLocation#40181ffe id:long access_hash:long file_reference:bytes thumb_size:string = InputFileLocation;
inputDocument#18798952 id:long access_hash:long = InputDocument;
downloadFile file_id:int32 priority:int32 offset:int32 limit:int32 synchronous:Bool = File;
storage.filePartial#40bc6f52 = storage.FileType;
callProblemDistortedSpeech = CallProblem;
//@class ChatSource @description Describes a reason why an external chat is shown in a chat list
//@disable_pinned_message_notifications True, if notifications for incoming pinned messages will be created as for an ordinary unread message
getAccountTtl = AccountTtl;
//@value Vector of numbers
//@description A mask should be placed relatively to the mouth
//@description Contains auto-download settings presets for the user
channelFull#f0e6672a flags:# can_view_participants:flags.3?true can_set_username:flags.6?true can_set_stickers:flags.7?true hidden_prehistory:flags.10?true can_set_location:flags.16?true has_scheduled:flags.19?true can_view_stats:flags.20?true blocked:flags.22?true id:int about:string participants_count:flags.0?int admins_count:flags.1?int kicked_count:flags.2?int banned_count:flags.2?int online_count:flags.13?int read_inbox_max_id:int read_outbox_max_id:int unread_count:int chat_photo:Photo notify_settings:PeerNotifySettings exported_invite:ExportedChatInvite bot_info:Vector<BotInfo> migrated_from_chat_id:flags.4?int migrated_from_max_id:flags.4?int pinned_msg_id:flags.5?int stickerset:flags.8?StickerSet available_min_id:flags.9?int folder_id:flags.11?int linked_chat_id:flags.14?int location:flags.15?ChannelLocation slowmode_seconds:flags.17?int slowmode_next_send_date:flags.18?int stats_dc:flags.12?int pts:int = ChatFull;
msgs_state_req#da69fb52 msg_ids:Vector<long> = MsgsStateReq;
ipPortSecret#37982646 ipv4:int port:int secret:bytes = IpPort;
//@pending_join_requests Information about pending join requests; may be null
updateChannelPinnedMessage#98592475 channel_id:int id:int = Update;
messages.exportChatInvite#7d885289 chat_id:int = ExportedChatInvite;
sendMessageGeoLocationAction#176f8ba1 = SendMessageAction;
channels.deleteMessages#84c1fd4e channel:InputChannel id:Vector<int> = messages.AffectedMessages;
auth.sendCode#a677244f phone_number:string api_id:int api_hash:string settings:CodeSettings = auth.SentCode;
account.getTheme#8d9d742b format:string theme:InputTheme document_id:long = Theme;
secFunc#4 id:int = Foo;
searchMessagesFilterUnreadMention = SearchMessagesFilter;
inputMessagePoll question:string options:vector<string> is_anonymous:Bool type:PollType open_period:int32 close_date:int32 is_closed:Bool = InputMessageContent;
//@chat_id Identifier of a chat, in which the thumbnail will be shown. Use 0 if unknown
//@description Contains a TDLib internal log verbosity level @verbosity_level Log verbosity level
chatListMain = ChatList;
setProfilePhoto photo:InputChatPhoto = Ok;
inputInlineQueryResultVideo id:string title:string description:string thumbnail_url:string video_url:string mime_type:string video_width:int32 video_height:int32 video_duration:int32 reply_markup:ReplyMarkup input_message_content:InputMessageContent = InputInlineQueryResult;
//@can_send_media_messages True, if the user can send audio files, documents, photos, videos, video notes, and voice notes. Implies can_send_messages permissions
//@include_bots True, if bots need to be included
chatTypeSupergroup supergroup_id:int32 is_channel:Bool = ChatType;
//@description Represents short information about a sticker set
//@member_limit The maximum number of chat members that can join the chat via the link simultaneously; 0-99999; pass 0 if not limited
labeledPrice#cb296bf8 label:string amount:long = LabeledPrice;
//@view_count_by_source_graph A graph containing number of message views per source
statisticsGraphAsync token:string = StatisticsGraph;
inputWebDocument#9bed434d url:string size:int mime_type:string attributes:Vector<DocumentAttribute> = InputWebDocument;
//@filter The edited chat filter
connectionStateUpdating = ConnectionState;
updateBotCallbackQuery#e73547e1 flags:# query_id:long user_id:int peer:Peer msg_id:int chat_instance:long data:flags.0?bytes game_short_name:flags.1?string = Update;
inputDocumentEmpty#72f0eaae = InputDocument;
//@action Suggested action to hide
pageFull#556ec7aa blocks:Vector<PageBlock> photos:Vector<Photo> documents:Vector<Document> = Page;
//@volume_level Participant's volume level; 1-20000 in hundreds of percents
//@country_code A two-letter ISO 3166-1 alpha-2 country code
inlineQueryResultArticle#c4c82d9 id:string url:string hide_url:Bool title:string description:string thumbnail:thumbnail = InlineQueryResult;
//@supergroup_id Identifier of the supergroup or channel
channels.exportMessageLink#ceb77163 channel:InputChannel id:int grouped:Bool = ExportedMessageLink;
inputEncryptedFile#5a17b5e5 id:long access_hash:long = InputEncryptedFile;
//@description A new chat has been loaded/created. This update is guaranteed to come before the chat identifier is returned to the application. The chat field changes will be reported through separate updates @chat The chat
